{"ast":null,"code":"var _jsxFileName = \"/home/prashant/Documents/codes/mern/todos/todos/src/components/EditTask.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from \"react\";\nimport taskContext from \"../context/taskContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTask = props => {\n  _s();\n  const context = useContext(taskContext);\n  const {\n    deleteTask,\n    getTasks\n  } = context;\n  const {\n    task,\n    updateTask\n  } = props;\n  useEffect(() => {\n    getTasks();\n    // eslint-disable-next-line\n  }, []);\n\n  // Guard against undefined or null task\n  if (!task) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No task found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Ensure description is defined, if not, set it to an empty string\n  const description = task.description || \"\";\n\n  // Split the description into paragraphs based on line breaks\n  const paragraphs = description.split(/\\r?\\n/);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container col-md-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card my-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center \",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-trash mx-3\",\n            onClick: () => {\n              deleteTask(task._id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-pen-to-square mx-3\",\n            onClick: () => {\n              updateTask(task);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), paragraphs.map((paragraph, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text text-wrap\",\n          children: paragraph\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Contact Us\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(EditTask, \"wqnYpdjMkT3eDhbBjwDmfBO/TFg=\");\n_c = EditTask;\nexport default EditTask;\nvar _c;\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"names":["React","useContext","useEffect","taskContext","jsxDEV","_jsxDEV","EditTask","props","_s","context","deleteTask","getTasks","task","updateTask","children","fileName","_jsxFileName","lineNumber","columnNumber","description","paragraphs","split","className","title","onClick","_id","map","paragraph","index","_c","$RefreshReg$"],"sources":["/home/prashant/Documents/codes/mern/todos/todos/src/components/EditTask.js"],"sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport taskContext from \"../context/taskContext\";\n\nconst EditTask = (props) => {\n  const context = useContext(taskContext);\n  const { deleteTask, getTasks } = context;\n\n  const { task, updateTask } = props;\n\n  useEffect(() => {\n    getTasks();\n    // eslint-disable-next-line\n  }, []);\n\n  // Guard against undefined or null task\n  if (!task) {\n    return <div>No task found</div>;\n  }\n\n  // Ensure description is defined, if not, set it to an empty string\n  const description = task.description || \"\";\n\n  // Split the description into paragraphs based on line breaks\n  const paragraphs = description.split(/\\r?\\n/);\n  return (\n    <div className=\"container col-md-5\">\n      <div className=\"card my-3\">\n        <div className=\"card-body\">\n          <div className=\"d-flex align-items-center \">\n            <h5 className=\"card-title\">{task.title}</h5>\n            <i\n              className=\"fa-solid fa-trash mx-3\"\n              onClick={() => {\n                deleteTask(task._id);\n              }}\n            ></i>\n            <i\n              className=\"fa-solid fa-pen-to-square mx-3\"\n              onClick={() => {\n                updateTask(task);\n              }}\n            ></i>\n          </div>\n\n          {/* Map over the paragraphs array and create a <p> element for each */}\n          {paragraphs.map((paragraph, index) => (\n            <p key={index} className=\"card-text text-wrap\">\n              {paragraph}\n            </p>\n          ))}\n\n          <button>Contact Us</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditTask;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,OAAOC,WAAW,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAMC,OAAO,GAAGR,UAAU,CAACE,WAAW,CAAC;EACvC,MAAM;IAAEO,UAAU;IAAEC;EAAS,CAAC,GAAGF,OAAO;EAExC,MAAM;IAAEG,IAAI;IAAEC;EAAW,CAAC,GAAGN,KAAK;EAElCL,SAAS,CAAC,MAAM;IACdS,QAAQ,CAAC,CAAC;IACV;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAI,CAACC,IAAI,EAAE;IACT,oBAAOP,OAAA;MAAAS,QAAA,EAAK;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjC;;EAEA;EACA,MAAMC,WAAW,GAAGP,IAAI,CAACO,WAAW,IAAI,EAAE;;EAE1C;EACA,MAAMC,UAAU,GAAGD,WAAW,CAACE,KAAK,CAAC,OAAO,CAAC;EAC7C,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,oBAAoB;IAAAR,QAAA,eACjCT,OAAA;MAAKiB,SAAS,EAAC,WAAW;MAAAR,QAAA,eACxBT,OAAA;QAAKiB,SAAS,EAAC,WAAW;QAAAR,QAAA,gBACxBT,OAAA;UAAKiB,SAAS,EAAC,4BAA4B;UAAAR,QAAA,gBACzCT,OAAA;YAAIiB,SAAS,EAAC,YAAY;YAAAR,QAAA,EAAEF,IAAI,CAACW;UAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5Cb,OAAA;YACEiB,SAAS,EAAC,wBAAwB;YAClCE,OAAO,EAAEA,CAAA,KAAM;cACbd,UAAU,CAACE,IAAI,CAACa,GAAG,CAAC;YACtB;UAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACLb,OAAA;YACEiB,SAAS,EAAC,gCAAgC;YAC1CE,OAAO,EAAEA,CAAA,KAAM;cACbX,UAAU,CAACD,IAAI,CAAC;YAClB;UAAE;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,EAGLE,UAAU,CAACM,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBAC/BvB,OAAA;UAAeiB,SAAS,EAAC,qBAAqB;UAAAR,QAAA,EAC3Ca;QAAS,GADJC,KAAK;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACJ,CAAC,eAEFb,OAAA;UAAAS,QAAA,EAAQ;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACV,EAAA,CArDIF,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAuDd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}